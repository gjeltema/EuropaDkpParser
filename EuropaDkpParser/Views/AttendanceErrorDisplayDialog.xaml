<UserControl x:Class="EuropaDkpParser.Views.AttendanceErrorDisplayDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EuropaDkpParser.Views" 
             xmlns:viewmodels="clr-namespace:EuropaDkpParser.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:AttendanceErrorDisplayDialogViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="0,0,0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Margin="0,0,5,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Label Content="{StaticResource AllAttendanceCalls}" Grid.Row="0"/>

                <ListView Grid.Row="1" ItemsSource="{Binding AllAttendances}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <UniformGrid Columns="1">
                                        <TextBlock Text="{Binding RawHeaderLogLine}"/>
                                    </UniformGrid>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Content="{Binding ErrorMessageText}" />

                <ListView Grid.Row="1" ItemsSource="{Binding ErrorAttendances}" SelectedItem="{Binding SelectedErrorEntry}" Margin="0,0,0,5">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <UniformGrid Columns="1">
                                        <TextBlock Text="{Binding RawHeaderLogLine}"/>
                                    </UniformGrid>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>

                <!-- These 4 grids overlay each other, controlled by visibility. -->
                <Grid Grid.Row="2" Visibility="{Binding IsDuplicateError, Converter={StaticResource BoolToVisibilityConverter}}" Margin="0,4,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <Button Grid.Row="0" Content="{StaticResource Remove}" Command="{Binding RemoveDuplicateErrorEntryCommand}" HorizontalAlignment="Right" Width="85" Height="30"/>

                    <Grid Grid.Row="1" Margin="0,5,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="0" Text="{Binding RaidNameText, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,4,0"/>
                        <Button Grid.Column="1" Content="{StaticResource UpdateRaidName}" Command="{Binding UpdateSelectedRaidNameCommand}" Width="85" Height="30" />
                    </Grid>
                </Grid>

                <Grid Grid.Row="2" Visibility="{Binding IsBossMobTypoError, Converter={StaticResource BoolToVisibilityConverter}}" Margin="0,2,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ComboBox Grid.Column="0" ItemsSource="{Binding ApprovedBossNames}" SelectedValue="{Binding SelectedBossName}" IsEditable="False" Margin="0,0,4,0"/>
                        <Button Grid.Column="1" Content="{StaticResource SetBoss}" Command="{Binding ChangeBossMobNameCommand}" Width="85" Height="30" />
                    </Grid>

                    <Grid Grid.Row="1" Margin="0,5,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ComboBox Grid.Column="0" ItemsSource="{Binding ZoneNames}" SelectedItem="{Binding SelectedZoneName}" IsEditable="False" Height="30" Margin="0,0,4,0" />
                        <!--<TextBox Grid.Column="0" Text="{Binding ZoneNameText, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,4,0"/>-->
                        <Button Grid.Column="1" Content="{StaticResource UpdateZone}" Command="{Binding UpdateZoneNameCommand}" Width="85" Height="30" />
                    </Grid>
                </Grid>

                <Grid Grid.Row="2" Visibility="{Binding IsNoZoneNameError, Converter={StaticResource BoolToVisibilityConverter}}" Margin="0,2,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="0" Text="{Binding RaidNameText, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,4,0"/>
                        <Button Grid.Column="1" Content="{StaticResource UpdateRaidName}" Command="{Binding UpdateRaidNameCommand}" Width="85" Height="30" />
                    </Grid>

                    <Grid Grid.Row="1" Margin="0,5,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ComboBox Grid.Column="0" ItemsSource="{Binding ZoneNames}" SelectedItem="{Binding SelectedZoneName}" IsEditable="False" Height="30" Margin="0,0,4,0"/>
                        <!--<TextBox Grid.Column="0" Text="{Binding ZoneNameText, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,4,0"/>-->
                        <Button Grid.Column="1" Content="{StaticResource UpdateZone}" Command="{Binding UpdateZoneNameCommand}" Width="85" Height="30" />
                    </Grid>
                </Grid>

                <Grid Grid.Row="2" Visibility="{Binding IsRaidNameTooShortError, Converter={StaticResource BoolToVisibilityConverter}}" Margin="0,2,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="0" Text="{Binding RaidNameText, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,4,0"/>
                        <Button Grid.Column="1" Content="{StaticResource UpdateRaidName}" Command="{Binding UpdateRaidNameCommand}" Width="85" Height="30" />
                    </Grid>

                    <Grid Grid.Row="1" Margin="0,5,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ComboBox Grid.Column="0" ItemsSource="{Binding ZoneNames}" SelectedItem="{Binding SelectedZoneName}" VerticalContentAlignment="Center" IsEditable="False" Height="30" Margin="0,0,4,0"/>
                        <!--<TextBox Grid.Column="0" Text="{Binding ZoneNameText, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,4,0"/>-->
                        <Button Grid.Column="1" Content="{StaticResource UpdateZone}" Command="{Binding UpdateZoneNameCommand}" Width="85" Height="30" />
                    </Grid>
                </Grid>

            </Grid>
        </Grid>

        <Grid Grid.Row="1" Margin="0,8,0,0">
            <Button Content="{Binding NextButtonText}" Command="{Binding MoveToNextErrorCommand}" HorizontalAlignment="Right" Height="30" Width="85"/>
        </Grid>
    </Grid>
</UserControl>
